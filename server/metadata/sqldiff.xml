<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqldiff PUBLIC "-//OpenMRS//DTD OpenMRS SQL Diff Config 1.0//EN" "http://resources.openmrs.org/doctype/sqldiff-1.0.dtd">

<sqldiff version="1.0">
    <help></help>

    
    <diff>
        <version>1.0</version>
        <author>UW ICTD</author>
        <date>February 5 2010</date>
        <description>
            Creating the revision token tables and triggers
        </description>
        <sql>
        
        DROP TABLE IF EXISTS odkclinic_obs;
        CREATE TABLE odkclinic_obs (
              id int(11) NOT NULL,
              revision_token datetime NOT NULL default '0000-00-00 00:00:00',
              PRIMARY KEY  (id)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
        
        DROP TABLE IF EXISTS odkclinic_user;
        CREATE TABLE odkclinic_user (
              id varchar(255),
              revision_token datetime NOT NULL default '0000-00-00 00:00:00',
              PRIMARY KEY  (id)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
        
        DROP TABLE IF EXISTS odkclinic_encounter;
        CREATE TABLE odkclinic_encounter (
            id int NOT NULL,
            revision_token datetime NOT NULL default '0000-00-00 00:00:00',
            PRIMARY KEY (id)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
            
        DROP TRIGGER IF EXISTS obs_insert;  
        CREATE TRIGGER obs_insert AFTER INSERT ON obs
            FOR EACH ROW
            INSERT INTO odkclinic_obs(id,revision_token) VALUES (NEW.obs_id, NOW());
        
        DROP TRIGGER IF EXISTS encounter_trigger;
        DROP TRIGGER IF EXISTS encounter_insert;
        CREATE TRIGGER encounter_insert AFTER INSERT ON encounter
            FOR EACH ROW
            INSERT INTO odkclinic_encounter(id, revision_token) VALUES (NEW.encounter_id, NOW());
        
        DROP TRIGGER IF EXISTS encounter_delete;
        CREATE TRIGGER encounter_delete AFTER DELETE ON encounter
            FOR EACH ROW
            DELETE FROM odkclinic_encounter WHERE id = OLD.encounter_id;
        
        DROP TRIGGER IF EXISTS obs_delete;
        CREATE TRIGGER obs_delete AFTER DELETE ON obs
            FOR EACH ROW
            DELETE FROM odkclinic_obs WHERE id = OLD.obs_id;
        DROP TRIGGER IF EXISTS obs_update;
        CREATE TRIGGER obs_update BEFORE UPDATE ON obs 
            FOR EACH ROW
            BEGIN
                IF  OLD.voided = 0 AND NEW.voided = 1 THEN
                   DELETE FROM odkclinic_obs WHERE id = OLD.obs_id;
                ELSE 
                   UPDATE odkclinic_obs SET odkclinic_obs.revision_token = NOW() 
                   WHERE NEW.obs_id = odkclinic_obs.id;    
                END IF;
            END
                
        DROP TRIGGER IF EXISTS enc_update;
        CREATE TRIGGER enc_update BEFORE UPDATE ON encounter
            FOR EACH ROW
            BEGIN
                IF OLD.voided = 0 AND NEW.voided = 1 THEN
                    DELETE FROM odkclinic_encounter WHERE id = OLD.encounter_id;
                ELSE 
                    UPDATE odkclinic_encounter SET odkclinic_encounter.revision_token = NOW() 
                    WHERE NEW.encounter_id = odkclinic_encounter.id;
                END IF;
            END
        
        DELETE FROM concept_name WHERE concept_name_id = 0xBADF00D;
        DELETE FROM concept WHERE concept_id = 0xBADF00D;
        INSERT INTO concept(concept_id, class_id, datatype_id, is_set, retired, creator, date_created, uuid) VALUES(0xBADF00D, 11, 3, 0, 0, 1, NOW(), UUID());
        INSERT INTO concept_name(concept_id, name, locale, creator, date_created, concept_name_id, voided, uuid) VALUES(0xBADF00D, 'NOTES', 'en', 1, NOW(), 0xBADF00D, 0, UUID());
        
        
        </sql>
    </diff>
</sqldiff>